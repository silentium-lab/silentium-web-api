{"version":3,"file":"silentium-web-api.mjs","sources":["../src/fetch/FetchedData.ts","../src/fetch/RequestJson.ts","../src/dom/Elements.ts","../src/console/Log.ts"],"sourcesContent":["import { From, InformationType, OwnerType, TheInformation } from \"silentium\";\n\nexport interface FetchRequestType {\n  baseUrl?: string;\n  url: string;\n  method: string;\n  credentials?: RequestCredentials;\n  headers?: Record<string, string>;\n  body?: unknown;\n  query?: Record<string, unknown>;\n}\n\n/**\n * Wrapper around FetchAPI\n * https://kosukhin.github.io/patron-web-api/#/fetch/fetched\n * https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\n */\nexport class FetchedData extends TheInformation<string> {\n  public constructor(\n    private requestSrc: InformationType<Partial<FetchRequestType>>,\n    private errorOwner?: OwnerType<unknown>,\n    private abortSrc?: InformationType<unknown>,\n  ) {\n    super(requestSrc, abortSrc);\n  }\n\n  public value(o: OwnerType<string>): this {\n    const abortController = new AbortController();\n    if (this.abortSrc) {\n      this.abortSrc.value(\n        new From((abort) => {\n          if (abort) {\n            abortController.abort();\n          }\n        }),\n      );\n    }\n    this.requestSrc.value(\n      new From((request) => {\n        const { baseUrl, url, method, credentials, headers, body, query } =\n          request;\n        let urlWithQuery: URL;\n        try {\n          urlWithQuery = new URL(String(url), baseUrl);\n        } catch {\n          this.errorOwner?.give(new Error(\"Invalid URL\"));\n          return;\n        }\n        Object.entries(query ?? {}).forEach(([key, value]) =>\n          urlWithQuery.searchParams.append(key, String(value)),\n        );\n        const options: RequestInit = {\n          method,\n          credentials,\n          headers,\n          body: body as BodyInit,\n          signal: abortController.signal,\n        };\n        fetch(urlWithQuery.toString(), options)\n          .then((response) => response.text())\n          .then((data) => o.give(data))\n          .catch((error) => {\n            this.errorOwner?.give(error);\n          });\n      }),\n    );\n    return this;\n  }\n}\n","import { From, InformationType, OwnerType, TheInformation } from \"silentium\";\nimport { FetchRequestType } from \"./FetchedData\";\n\n/**\n * Represents a request for JSON data.\n */\nexport class RequestJson extends TheInformation<Partial<FetchRequestType>> {\n  public constructor(\n    private requestSrc: InformationType<Partial<FetchRequestType>>,\n    private errorOwner?: OwnerType<unknown>,\n  ) {\n    super(requestSrc, errorOwner);\n  }\n\n  public value(o: OwnerType<Partial<FetchRequestType>>): this {\n    this.requestSrc.value(\n      new From((r) => {\n        try {\n          o.give({\n            ...r,\n            headers: {\n              ...(r.headers ?? {}),\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(r.body),\n          });\n        } catch {\n          this.errorOwner?.give(new Error(\"Failed to parse JSON\"));\n        }\n      }),\n    );\n    return this;\n  }\n}\n","import { From, InformationType, OwnerType, TheInformation } from \"silentium\";\n\n/**\n * Represents a collection of elements that match a given CSS selector.\n */\nexport class Elements extends TheInformation<HTMLElement[]> {\n  public constructor(private selectorSrc: InformationType<string>) {\n    super(selectorSrc);\n  }\n\n  public value(o: OwnerType<HTMLElement[]>): this {\n    this.selectorSrc.value(\n      new From((selectorContent) => {\n        const element = document.querySelectorAll(selectorContent);\n        if (element.length) {\n          o.give(Array.from(element) as HTMLElement[]);\n        } else {\n          const targetNode = document.body;\n          const config = { childList: true, subtree: true };\n\n          const observer = new MutationObserver((mutationsList) => {\n            for (const mutation of mutationsList) {\n              if (mutation.type === \"childList\") {\n                const element = document.querySelectorAll(selectorContent);\n                if (element) {\n                  o.give(Array.from(element) as HTMLElement[]);\n                  observer.disconnect();\n                  break;\n                }\n              }\n            }\n          });\n\n          observer.observe(targetNode, config);\n        }\n      }),\n    );\n\n    return this;\n  }\n}\n","import {\n  All,\n  From,\n  InformationType,\n  OwnerType,\n  TheInformation,\n} from \"silentium\";\n\n/**\n * Helps to print logs to somewhere\n * https://developer.mozilla.org/en-US/docs/Web/API/Console_API\n */\nexport class Log<T> extends TheInformation<T> {\n  public constructor(\n    private sourceSrc: InformationType<T>,\n    private titleSrc: InformationType<string>,\n  ) {\n    super(sourceSrc, titleSrc);\n  }\n\n  public value(o: OwnerType<T>): this {\n    new All(this.sourceSrc, this.titleSrc).value(\n      new From(([source, title]) => {\n        console.log(\"LOG:\", title, source);\n        o.give(source);\n      }),\n    );\n    return this;\n  }\n}\n"],"names":["element"],"mappings":"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"}