{"version":3,"file":"silentium-web-api.mjs","sources":["../src/history-api/HistoryPoppedPage.ts","../src/history-api/HistoryNewPage.ts","../src/fetch/Fetched.ts","../src/dom/Element.ts","../src/dom/Elements.ts","../src/dom/Attribute.ts","../src/dom/StyleInstalled.ts","../src/dom/controls/Input.ts","../src/dom/controls/Link.ts","../src/dom/controls/Visible.ts","../src/dom/controls/Event.ts","../src/dom/Text.ts","../src/dom/Html.ts","../src/dom/ClassToggled.ts","../src/console/Log.ts"],"sourcesContent":["import {\n  destroy,\n  give,\n  patronOnce,\n  sourceOf,\n  SourceType,\n  value,\n} from \"silentium\";\n\ntype WindowListener<T> = {\n  addEventListener: (name: string, handler: (e: T) => void) => void;\n  removeEventListener: (name: string, handler: (e: T) => void) => void;\n};\n\n/**\n * Get source of new page popped from historyAPI\n * https://developer.mozilla.org/en-US/docs/Web/API/History_API\n */\nexport const historyPoppedPage = (\n  listenSrc: SourceType<WindowListener<PopStateEvent>>,\n  destroyedSrc: SourceType<void>,\n) => {\n  const result = sourceOf<string>();\n\n  const handler = (e: PopStateEvent) => {\n    const { state } = e;\n    if (state?.url) {\n      give(String(state.url), result);\n    }\n  };\n\n  value(\n    listenSrc,\n    patronOnce((listen) => {\n      listen.addEventListener(\"popstate\", handler);\n    }),\n  );\n\n  value(\n    destroyedSrc,\n    patronOnce(() => {\n      destroy([result]);\n\n      value(listenSrc, (listen) => {\n        listen.removeEventListener(\"popstate\", handler);\n      });\n    }),\n  );\n\n  return result;\n};\n","import { patron, sourceAll, SourceType, value } from \"silentium\";\n\ntype PushStateAwareType = {\n  pushState(data: Record<string, unknown>, title: string, url: string): void;\n};\n\n/**\n * Apply content of new url to history API\n * https://developer.mozilla.org/en-US/docs/Web/API/History_API\n */\nexport const historyNewPate = (\n  pushSrc: SourceType<PushStateAwareType>,\n  urlSrc: SourceType<string>,\n) => {\n  value(\n    sourceAll([urlSrc, pushSrc]),\n    patron(([url, push]) => {\n      push.pushState(\n        {\n          url,\n          date: Date.now(),\n        },\n        \"\",\n        url,\n      );\n    }),\n  );\n\n  return urlSrc;\n};\n","import {\n  give,\n  GuestType,\n  patron,\n  sourceAll,\n  sourceOf,\n  SourceType,\n  value,\n} from \"silentium\";\n\ntype FetchType = {\n  fetch: (input: RequestInfo, options: RequestInfo) => Promise<Response>;\n};\ntype FetchParams = { url: string } & RequestInit;\n\n/**\n * Wrapper around FetchAPI\n * https://kosukhin.github.io/patron-web-api/#/fetch/fetched\n * https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\n */\nexport const fetched = <T>(\n  fetchSrc: SourceType<FetchType>,\n  requestSrc: SourceType<Partial<FetchParams>>,\n  errorsGuest: GuestType<Error>,\n) => {\n  const result = sourceOf<T>();\n\n  value(\n    sourceAll([requestSrc, fetchSrc]),\n    patron(([request, fetch]) => {\n      fetch\n        .fetch(\n          request.url as string,\n          { ...request, url: undefined } as unknown as RequestInfo,\n        )\n        .then((response) => {\n          let readableResponse;\n          if (response.headers.get(\"Content-Type\") === \"application/json\") {\n            readableResponse = response.json();\n          } else {\n            readableResponse = response.text();\n          }\n\n          if (!response.ok) {\n            return Promise.reject(readableResponse);\n          }\n\n          return readableResponse;\n        })\n        .then((content) => {\n          give(content, result);\n        })\n        .catch((error) => {\n          give(error, errorsGuest);\n        });\n    }),\n  );\n\n  return result;\n};\n","import {\n  give,\n  guestCast,\n  GuestType,\n  PersonalType,\n  sourceAll,\n  SourceType,\n  value,\n} from \"silentium\";\n\ntype MutationAware = {\n  observe(\n    node: HTMLElement,\n    config: { childList: boolean; subtree: boolean },\n  ): void;\n  disconnect(): void;\n};\n\ntype MutationList = { type: string }[];\n\n/**\n * Helps to find element by selector\n * https://developer.mozilla.org/en-US/docs/Web/API/HTML_DOM_API\n */\nexport const element = <T extends HTMLElement>(\n  createObserver: PersonalType<MutationAware>,\n  documentSrc: SourceType<Document>,\n  selectorSrc: SourceType<string>,\n): SourceType<T> => {\n  return (guest: GuestType<T>) => {\n    value(\n      sourceAll([selectorSrc, documentSrc]),\n      guestCast(guest, ([selector, document]) => {\n        const element = document.querySelector(selector);\n        if (element) {\n          give(element as T, guest);\n        } else if (createObserver) {\n          const targetNode = document.body;\n          const config = { childList: true, subtree: true };\n\n          const observer = createObserver.get((mutationsList: MutationList) => {\n            for (const mutation of mutationsList) {\n              if (mutation.type === \"childList\") {\n                const element = document.querySelector(selector);\n                if (element) {\n                  give(element as T, guest);\n                  observer.disconnect();\n                  break;\n                }\n              }\n            }\n          });\n\n          observer.observe(targetNode, config);\n        } else {\n          throw new Error(`Element with selector=${selector} was not found!`);\n        }\n      }),\n    );\n  };\n};\n","import {\n  give,\n  guestCast,\n  GuestType,\n  PersonalType,\n  sourceAll,\n  SourceType,\n  value,\n} from \"silentium\";\n\ntype MutationAware = {\n  observe(\n    node: HTMLElement,\n    config: { childList: boolean; subtree: boolean },\n  ): void;\n  disconnect(): void;\n};\n\ntype MutationList = { type: string }[];\n\n/**\n * Helps to find element by selector\n * https://developer.mozilla.org/en-US/docs/Web/API/HTML_DOM_API\n */\nexport const elements = <T extends HTMLElement[]>(\n  createObserver: PersonalType<MutationAware>,\n  documentSrc: SourceType<Document>,\n  selectorSrc: SourceType<string>,\n): SourceType<T> => {\n  return (guest: GuestType<T>) => {\n    value(\n      sourceAll([selectorSrc, documentSrc]),\n      guestCast(guest, ([selector, document]) => {\n        const element = document.querySelectorAll(selector);\n        if (element) {\n          give(Array.from(element) as T, guest);\n        } else if (createObserver) {\n          const targetNode = document.body;\n          const config = { childList: true, subtree: true };\n\n          const observer = createObserver.get((mutationsList: MutationList) => {\n            for (const mutation of mutationsList) {\n              if (mutation.type === \"childList\") {\n                const element = document.querySelectorAll(selector);\n                if (element) {\n                  give(Array.from(element) as T, guest);\n                  observer.disconnect();\n                  break;\n                }\n              }\n            }\n          });\n\n          observer.observe(targetNode, config);\n        } else {\n          throw new Error(`Element with selector=${selector} was not found!`);\n        }\n      }),\n    );\n  };\n};\n","import {\n  give,\n  patron,\n  sourceAll,\n  sourceOf,\n  SourceType,\n  subSourceMany,\n  value,\n} from \"silentium\";\n\n/**\n * Return content attribute of HTMLElement\n * https://developer.mozilla.org/en-US/docs/Web/API/HTML_DOM_API\n */\nexport const attribute = (\n  attrNameSrc: SourceType<string>,\n  elementSrc: SourceType<HTMLElement>,\n  defaultValueSrc: SourceType<string> = \"\",\n) => {\n  const result = sourceOf<string>();\n  subSourceMany(result, [elementSrc, attrNameSrc, defaultValueSrc]);\n\n  value(\n    sourceAll([elementSrc, attrNameSrc, defaultValueSrc]),\n    patron(([el, attrName, defaultValue]) => {\n      give(el.getAttribute(attrName) || defaultValue, result);\n    }),\n  );\n\n  return result;\n};\n","import {\n  give,\n  guestCast,\n  GuestType,\n  sourceAll,\n  SourceType,\n  value,\n} from \"silentium\";\n\n/**\n * Render styles to document\n * https://developer.mozilla.org/en-US/docs/Web/API/HTML_DOM_API\n */\nexport const styleInstalled = (\n  documentSrc: SourceType<Document>,\n  contentSrc: SourceType<string>,\n) => {\n  return (guest: GuestType<string>) => {\n    value(\n      sourceAll([documentSrc, contentSrc]),\n      guestCast(guest, ([document, content]) => {\n        const styleEl = document.createElement(\"style\");\n        styleEl.textContent = content;\n        document.head.appendChild(styleEl);\n        give(content, guest);\n      }),\n    );\n  };\n};\n","import {\n  patron,\n  sourceAll,\n  SourceChangeableType,\n  SourceType,\n  value,\n} from \"silentium\";\n\ntype InputValue = number | string;\n\nexport const input = (\n  valueSrc: SourceChangeableType<InputValue>,\n  elementSrc: SourceType<HTMLInputElement>,\n) => {\n  const setValue = () => {\n    value(elementSrc, (element) => {\n      valueSrc.give(element.value);\n    });\n  };\n\n  let prevElement: HTMLInputElement | null = null;\n\n  value(\n    elementSrc,\n    patron((element) => {\n      if (prevElement) {\n        element.removeEventListener(\"keyup\", setValue);\n        element.removeEventListener(\"change\", setValue);\n      }\n\n      element.addEventListener(\"keyup\", setValue);\n      element.addEventListener(\"change\", setValue);\n      prevElement = element;\n    }),\n  );\n\n  value(\n    sourceAll([valueSrc, elementSrc]),\n    patron(([value, element]) => {\n      element.value = String(value);\n    }),\n  );\n\n  return valueSrc;\n};\n","import { source, sourceAll, sourceOf, SourceType, value } from \"silentium\";\n\n/**\n * Represents link what when it will be clicked, then source will be\n * filled with clicked href value\n */\nexport const link = (\n  wrapperSrc: SourceType<HTMLElement>,\n  elementSelectorSrc: SourceType<string>,\n  attributeSrc = source<string>(\"href\"),\n): SourceType<string> => {\n  const result = sourceOf<string>();\n\n  value(\n    sourceAll([wrapperSrc, elementSelectorSrc, attributeSrc]),\n    ([wrapper, elementSelector, attribute]) => {\n      wrapper.addEventListener(\"click\", (e) => {\n        if (\n          e.target !== null &&\n          \"matches\" in e.target &&\n          typeof e.target.matches == \"function\" &&\n          e.target.matches(elementSelector)\n        ) {\n          e.preventDefault();\n          const href = (e?.target as HTMLElement)?.getAttribute(attribute);\n          if (href) {\n            result.give(href);\n          }\n        }\n      });\n    },\n  );\n\n  return result;\n};\n","import { patron, sourceAll, SourceType, value } from \"silentium\";\n\nexport const visible = (\n  valueSrc: SourceType<boolean>,\n  elementSrc: SourceType<HTMLElement>,\n  visibilityTypeSrc: SourceType<string> = \"block\",\n) => {\n  value(\n    sourceAll([valueSrc, elementSrc, visibilityTypeSrc]),\n    patron(([v, el, vt]) => {\n      el.style.display = v ? vt : \"none\";\n    }),\n  );\n\n  return valueSrc;\n};\n","import {\n  give,\n  patronOnce,\n  sourceDestroyable,\n  sourceOnce,\n  sourceSync,\n  SourceType,\n  value,\n} from \"silentium\";\n\n/**\n * Creates a source that emits events from a DOM element.\n */\nexport const event = <T>(\n  elementSrc: SourceType<HTMLElement>,\n  eventNameSrc: SourceType<string>,\n): SourceType<T> => {\n  const elementOnceSrc = sourceOnce(elementSrc);\n  const eventNameSync = sourceSync(eventNameSrc);\n  return sourceDestroyable((g) => {\n    let el: HTMLElement | null = null;\n    const eventHandler = (e: Event) => {\n      give(e as T, g);\n    };\n    value(\n      elementOnceSrc,\n      patronOnce((element) => {\n        el = element;\n        element.addEventListener(eventNameSync.syncValue(), eventHandler);\n      }),\n    );\n    return () => {\n      if (el !== null) {\n        el.removeEventListener(eventNameSync.syncValue(), eventHandler);\n      }\n    };\n  });\n};\n","import { patron, sourceAll, SourceType, value } from \"silentium\";\n\nexport const text = (\n  valueSrc: SourceType<string>,\n  elementSrc: SourceType<HTMLElement>,\n) => {\n  value(\n    sourceAll([valueSrc, elementSrc]),\n    patron(([v, el]) => {\n      el.textContent = v;\n    }),\n  );\n\n  return valueSrc;\n};\n","import { patron, sourceAll, SourceType, value } from \"silentium\";\n\nexport const html = (\n  elementSrc: SourceType<HTMLElement>,\n  valueSrc: SourceType<string>,\n) => {\n  value(\n    sourceAll([valueSrc, elementSrc]),\n    patron(([v, el]) => {\n      el.innerHTML = v;\n    }),\n  );\n\n  return valueSrc;\n};\n","import { SourceType, sourceCombined, GuestType, give } from \"silentium\";\n\n/**\n * Gives ability to toggle classes of html element\n */\nexport const classToggled = (\n  elementSrc: SourceType<HTMLElement>,\n  classSrc: SourceType<string>,\n) => {\n  return sourceCombined(\n    elementSrc,\n    classSrc,\n  )((g: GuestType<string>, element, theClass) => {\n    element.classList.toggle(theClass);\n    give(theClass, g);\n  });\n};\n\nexport const classAdded = (\n  elementSrc: SourceType<HTMLElement>,\n  classSrc: SourceType<string>,\n) => {\n  return sourceCombined(\n    elementSrc,\n    classSrc,\n  )((g: GuestType<string>, element, theClass) => {\n    element.classList.add(theClass);\n    give(theClass, g);\n  });\n};\n\nexport const classRemoved = (\n  elementSrc: SourceType<HTMLElement>,\n  classSrc: SourceType<string>,\n) => {\n  return sourceCombined(\n    elementSrc,\n    classSrc,\n  )((g: GuestType<string>, element, theClass) => {\n    element.classList.remove(theClass);\n    give(theClass, g);\n  });\n};\n","import { patron, sourceAll, SourceType, value } from \"silentium\";\n\ntype LogAware = { log: (...args: unknown[]) => unknown };\n\n/**\n * Helps to print logs to somewhere\n * https://developer.mozilla.org/en-US/docs/Web/API/Console_API\n */\nexport const log = <T>(\n  consoleLike: SourceType<LogAware>,\n  title: SourceType<string>,\n  source: SourceType<T>,\n): SourceType<T> => {\n  const all = sourceAll([source, title, consoleLike]);\n\n  value(\n    all,\n    patron(([s, title, console]) => {\n      console.log(\"LOG:\", title, s);\n    }),\n  );\n\n  return source;\n};\n"],"names":["element","value","title"],"mappings":"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"}