{"version":3,"file":"silentium-web-api.mjs","sources":["../src/history-api/HistoryPoppedPage.ts","../src/history-api/HistoryNewPage.ts","../src/fetch/Fetched.ts","../src/dom/Element.ts","../src/dom/Attribute.ts","../src/dom/StyleInstalled.ts","../src/console/Log.ts"],"sourcesContent":["import {\n  destroy,\n  give,\n  patronOnce,\n  sourceOf,\n  SourceType,\n  value,\n} from \"silentium\";\n\ntype WindowListener<T> = {\n  addEventListener: (name: string, handler: (e: T) => void) => void;\n  removeEventListener: (name: string, handler: (e: T) => void) => void;\n};\n\n/**\n * Get source of new page popped from historyAPI\n * https://developer.mozilla.org/en-US/docs/Web/API/History_API\n */\nexport const historyPoppedPage = (\n  destroyedSrc: SourceType<void>,\n  listenSrc: SourceType<WindowListener<PopStateEvent>>,\n) => {\n  const result = sourceOf<string>();\n\n  const handler = (e: PopStateEvent) => {\n    const { state } = e;\n    if (state?.url) {\n      give(String(state.url), result);\n    }\n  };\n\n  value(\n    listenSrc,\n    patronOnce((listen) => {\n      listen.addEventListener(\"popstate\", handler);\n    }),\n  );\n\n  value(\n    destroyedSrc,\n    patronOnce(() => {\n      destroy([result]);\n\n      value(listenSrc, (listen) => {\n        listen.removeEventListener(\"popstate\", handler);\n      });\n    }),\n  );\n\n  return result;\n};\n","import {\n  give,\n  guestCast,\n  GuestType,\n  sourceAll,\n  SourceType,\n  value,\n} from \"silentium\";\n\ntype PushStateAwareType = {\n  pushState(data: Record<string, unknown>, title: string, url: string): void;\n};\n\n/**\n * Apply content of new url to history API\n * https://developer.mozilla.org/en-US/docs/Web/API/History_API\n */\nexport const historyNewPate = (\n  urlSrc: SourceType<string>,\n  pushSrc: SourceType<PushStateAwareType>,\n) => {\n  return (guest: GuestType<string>) => {\n    value(\n      sourceAll([urlSrc, pushSrc]),\n      guestCast(guest, ([url, push]) => {\n        push.pushState(\n          {\n            url,\n            date: Date.now(),\n          },\n          \"\",\n          url,\n        );\n        give(url, guest);\n      }),\n    );\n  };\n};\n","import {\n  give,\n  GuestType,\n  patron,\n  sourceAll,\n  sourceOf,\n  SourceType,\n  value,\n} from \"silentium\";\n\ntype FetchType = { fetch: (input: RequestInfo) => Promise<Response> };\n\n/**\n * Wrapper around FetchAPI\n * https://kosukhin.github.io/patron-web-api/#/fetch/fetched\n * https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\n */\nexport const fetched = <T>(\n  request: SourceType<Partial<RequestInfo>>,\n  errors: GuestType<Error>,\n  fetch: SourceType<FetchType>,\n) => {\n  const result = sourceOf<T>();\n\n  value(\n    sourceAll([request, fetch]),\n    patron(([req, fetch]) => {\n      fetch\n        .fetch(req as RequestInfo)\n        .then((response) => {\n          let readableResponse;\n          if (response.headers.get(\"Content-Type\") === \"application/json\") {\n            readableResponse = response.json();\n          } else {\n            readableResponse = response.text();\n          }\n\n          if (!response.ok) {\n            return Promise.reject(readableResponse);\n          }\n\n          return readableResponse;\n        })\n        .then((content) => {\n          give(content, result);\n        })\n        .catch((error) => {\n          give(error, errors);\n        });\n    }),\n  );\n\n  return result;\n};\n","import {\n  give,\n  guestCast,\n  GuestType,\n  PersonalType,\n  sourceAll,\n  SourceType,\n  value,\n} from \"silentium\";\n\ntype MutationAware = {\n  observe(\n    node: HTMLElement,\n    config: { childList: boolean; subtree: boolean },\n  ): void;\n  disconnect(): void;\n};\n\ntype MutationList = { type: string }[];\n\n/**\n * Helps to find element by selector\n * https://developer.mozilla.org/en-US/docs/Web/API/HTML_DOM_API\n */\nexport const element = (\n  selectorSrc: SourceType<string>,\n  documentSrc: SourceType<Document>,\n  createObserver?: PersonalType<MutationAware>,\n): SourceType<HTMLElement> => {\n  return (guest: GuestType<HTMLElement>) => {\n    value(\n      sourceAll([selectorSrc, documentSrc]),\n      guestCast(guest, ([selector, document]) => {\n        const element = document.querySelector(selector);\n        if (element) {\n          give(element as HTMLElement, guest);\n        } else if (createObserver) {\n          const targetNode = document.body;\n          const config = { childList: true, subtree: true };\n\n          const observer = createObserver.get((mutationsList: MutationList) => {\n            for (const mutation of mutationsList) {\n              if (mutation.type === \"childList\") {\n                const element = document.querySelector(selector);\n                if (element) {\n                  give(element as HTMLElement, guest);\n                  observer.disconnect();\n                  break;\n                }\n              }\n            }\n          });\n\n          observer.observe(targetNode, config);\n        } else {\n          throw new Error(`Element with selector=${selector} was not found!`);\n        }\n      }),\n    );\n  };\n};\n","import {\n  give,\n  patron,\n  sourceAll,\n  sourceOf,\n  SourceType,\n  subSourceMany,\n  value,\n} from \"silentium\";\n\n/**\n * Return content attribute of HTMLElement\n * https://developer.mozilla.org/en-US/docs/Web/API/HTML_DOM_API\n */\nexport const attribute = (\n  elementSrc: SourceType<HTMLElement>,\n  attrNameSrc: SourceType<string>,\n  defaultValueSrc: SourceType<string> = \"\",\n) => {\n  const result = sourceOf<string>();\n  subSourceMany(result, [elementSrc, attrNameSrc, defaultValueSrc]);\n\n  value(\n    sourceAll([elementSrc, attrNameSrc, defaultValueSrc]),\n    patron(([el, attrName, defaultValue]) => {\n      give(el.getAttribute(attrName) || defaultValue, result);\n    }),\n  );\n\n  return result;\n};\n","import {\n  give,\n  guestCast,\n  GuestType,\n  sourceAll,\n  SourceType,\n  value,\n} from \"silentium\";\n\n/**\n * Render styles to document\n * https://developer.mozilla.org/en-US/docs/Web/API/HTML_DOM_API\n */\nexport const styleInstalled = (\n  documentSrc: SourceType<Document>,\n  contentSrc: SourceType<string>,\n) => {\n  return (guest: GuestType<Document>) => {\n    value(\n      sourceAll([documentSrc, contentSrc]),\n      guestCast(guest, ([document, content]) => {\n        const styleEl = document.createElement(\"style\");\n        styleEl.textContent = content;\n        document.head.appendChild(styleEl);\n        give(document, guest);\n      }),\n    );\n  };\n};\n","import { patron, sourceAll, SourceType, value } from \"silentium\";\n\ntype LogAware = { log: (...args: unknown[]) => unknown };\n\n/**\n * Helps to print logs to somewhere\n * https://developer.mozilla.org/en-US/docs/Web/API/Console_API\n */\nexport const log = <T>(\n  source: SourceType<T>,\n  title: SourceType<string> = \"\",\n  consoleLike: SourceType<LogAware> = console,\n): SourceType<T> => {\n  const all = sourceAll([source, title, consoleLike]);\n\n  value(\n    all,\n    patron(([s, title, console]) => {\n      console.log(\"LOG:\", title, s);\n    }),\n  );\n\n  return source;\n};\n"],"names":["fetch","element","title","console"],"mappings":"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"}