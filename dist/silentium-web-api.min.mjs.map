{"version":3,"file":"silentium-web-api.min.mjs","sources":["../src/fetch/FetchedData.ts","../src/fetch/RequestJson.ts","../src/dom/Elements.ts","../src/console/Log.ts","../src/timer/Timer.ts"],"sourcesContent":["import { EventType, EventUserType } from \"silentium\";\n\nexport interface FetchRequestType {\n  baseUrl?: string;\n  url: string;\n  method: string;\n  credentials?: RequestCredentials;\n  headers?: Record<string, string>;\n  body?: unknown;\n  query?: Record<string, unknown>;\n}\n\n/**\n * Wrapper around FetchAPI\n * https://kosukhin.github.io/patron-web-api/#/fetch/fetched\n * https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\n */\nexport const fetchedData = (\n  requestSrc: EventType<Partial<FetchRequestType>>,\n  errorOwner?: EventUserType,\n  abortSrc?: EventType,\n): EventType<string> => {\n  return (u) => {\n    const abortController = new AbortController();\n    if (abortSrc) {\n      abortSrc((abort) => {\n        if (abort) {\n          abortController.abort();\n        }\n      });\n    }\n    requestSrc((request) => {\n      const { baseUrl, url, method, credentials, headers, body, query } =\n        request;\n      let urlWithQuery: URL;\n      try {\n        urlWithQuery = new URL(String(url), baseUrl);\n      } catch {\n        errorOwner?.(new Error(\"Invalid URL\"));\n        return;\n      }\n      Object.entries(query ?? {}).forEach(([key, value]) =>\n        urlWithQuery.searchParams.append(key, String(value)),\n      );\n      const options: RequestInit = {\n        method,\n        credentials,\n        headers,\n        body: body as BodyInit,\n        signal: abortController.signal,\n      };\n      fetch(urlWithQuery.toString(), options)\n        .then((response) => response.text())\n        .then((data) => u(data))\n        .catch((error) => {\n          errorOwner?.(error);\n        });\n    });\n  };\n};\n","import { EventType, EventUserType } from \"silentium\";\nimport { FetchRequestType } from \"./FetchedData\";\n\n/**\n * Represents a request for JSON data.\n */\nexport const requestJson = (\n  requestSrc: EventType<Partial<FetchRequestType>>,\n  errorOwner?: EventUserType<unknown>,\n): EventType<Partial<FetchRequestType>> => {\n  return (u) => {\n    requestSrc((r) => {\n      try {\n        u({\n          ...r,\n          headers: {\n            ...(r.headers ?? {}),\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(r.body),\n        });\n      } catch {\n        errorOwner?.(new Error(\"Failed to parse JSON\"));\n      }\n    });\n  };\n};\n","import { EventType } from \"silentium\";\n\n/**\n * Represents a collection of elements that match a given CSS selector.\n */\nexport const elements = <T extends HTMLElement>(\n  selectorSrc: EventType<string>,\n): EventType<T[]> => {\n  return (u) => {\n    selectorSrc((selectorContent) => {\n      const element = document.querySelectorAll(selectorContent);\n      if (element.length) {\n        u(Array.from(element) as T[]);\n      } else {\n        const targetNode = document.body;\n        const config = { childList: true, subtree: true };\n\n        const observer = new MutationObserver((mutationsList) => {\n          for (const mutation of mutationsList) {\n            if (mutation.type === \"childList\") {\n              const element = document.querySelectorAll(selectorContent);\n              if (element) {\n                u(Array.from(element) as T[]);\n                observer.disconnect();\n                break;\n              }\n            }\n          }\n        });\n\n        observer.observe(targetNode, config);\n      }\n    });\n  };\n};\n","import { all, EventType } from \"silentium\";\n\n/**\n * Helps to print logs to somewhere\n * https://developer.mozilla.org/en-US/docs/Web/API/Console_API\n */\nexport const log = <T>(\n  sourceSrc: EventType<T>,\n  titleSrc: EventType<string>,\n): EventType<T> => {\n  return (u) => {\n    all(\n      sourceSrc,\n      titleSrc,\n    )(([source, title]) => {\n      console.log(\"LOG:\", title, source);\n      u(source);\n    });\n  };\n};\n","import { DataType } from \"silentium\";\n\nexport const timer = (delay: number): DataType<number> => {\n  return (u) => {\n    setTimeout(() => {\n      u(delay);\n    }, delay);\n  };\n};\n"],"names":["fetchedData","requestSrc","errorOwner","abortSrc","u","abortController","AbortController","abort","request","baseUrl","url","method","credentials","headers","body","query","urlWithQuery","URL","String","Error","Object","entries","forEach","key","value","searchParams","append","options","signal","fetch","toString","then","response","text","data","catch","error","requestJson","r","JSON","stringify","elements","selectorSrc","selectorContent","element","document","querySelectorAll","length","Array","from","targetNode","config","childList","subtree","observer","MutationObserver","mutationsList","mutation","type","disconnect","observe","log","sourceSrc","titleSrc","all","source","title","console","timer","delay","setTimeout"],"mappings":"gCAiBO,MAAMA,EAAc,CACzBC,EACAC,EACAC,IAEQC,IACA,MAAAC,EAAkB,IAAIC,gBACxBH,GACFA,GAAUI,IACJA,GACFF,EAAgBE,WAItBN,GAAYO,IACJ,MAAAC,QAAEA,MAASC,EAAKC,OAAAA,EAAAC,YAAQA,UAAaC,EAASC,KAAAA,EAAAC,MAAMA,GACxDP,EACE,IAAAQ,EACA,IACFA,EAAe,IAAIC,IAAIC,OAAOR,GAAMD,EAAO,CACrC,MAEN,YADaP,IAAA,IAAIiB,MAAM,eACvB,CAEFC,OAAOC,QAAQN,GAAS,CAAA,GAAIO,SAAQ,EAAEC,EAAKC,KACzCR,EAAaS,aAAaC,OAAOH,EAAKL,OAAOM,MAE/C,MAAMG,EAAuB,CAC3BhB,SACAC,cACAC,UACAC,OACAc,OAAQvB,EAAgBuB,QAEpBC,MAAAb,EAAac,WAAYH,GAC5BI,MAAMC,GAAaA,EAASC,SAC5BF,MAAMG,GAAS9B,EAAE8B,KACjBC,OAAOC,IACNlC,IAAakC,UCjDVC,EAAc,CACzBpC,EACAC,IAEQE,IACNH,GAAYqC,IACN,IACAlC,EAAA,IACGkC,EACHzB,QAAS,IACHyB,EAAEzB,SAAW,CAAC,EAClB,eAAgB,oBAElBC,KAAMyB,KAAKC,UAAUF,EAAExB,OACxB,CACK,MACOZ,IAAA,IAAIiB,MAAM,wBAAuB,MCjBzCsB,EACXC,GAEQtC,IACNsC,GAAaC,IACL,MAAAC,EAAUC,SAASC,iBAAiBH,GAC1C,GAAIC,EAAQG,OACR3C,EAAA4C,MAAMC,KAAKL,QACR,CACL,MAAMM,EAAaL,SAAS/B,KACtBqC,EAAS,CAAEC,WAAW,EAAMC,SAAS,GAErCC,EAAW,IAAIC,kBAAkBC,IACrC,IAAA,MAAWC,KAAYD,EACjB,GAAkB,cAAlBC,EAASC,KAAsB,CAC3Bd,MAAAA,EAAUC,SAASC,iBAAiBH,GAC1C,GAAIC,EAAS,CACTxC,EAAA4C,MAAMC,KAAKL,IACbU,EAASK,aACT,KAAA,CACF,KAKGL,EAAAM,QAAQV,EAAYC,EAAM,MCxB9BU,EAAM,CACjBC,EACAC,IAEQ3D,IACN4D,EACEF,EACAC,EAFFC,EAGE,EAAEC,EAAQC,MACFC,QAAAN,IAAI,OAAQK,EAAOD,GAC3B7D,EAAE6D,OCdKG,EAASC,GACZjE,IACNkE,YAAW,KACTlE,EAAEiE,KACDA"}