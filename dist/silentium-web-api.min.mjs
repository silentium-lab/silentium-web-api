import{sourceOf as e,value as t,patronOnce as n,destroy as r,give as o,sourceAll as s,guestCast as c,patron as i,subSourceMany as a}from"silentium";const l=(s,c)=>{const i=e(),a=e=>{const{state:t}=e;t?.url&&o(String(t.url),i)};return t(s,n((e=>{e.addEventListener("popstate",a)}))),t(c,n((()=>{r([i]),t(s,(e=>{e.removeEventListener("popstate",a)}))}))),i},u=(e,n)=>r=>{t(s([n,e]),c(r,(([e,t])=>{t.pushState({url:e,date:Date.now()},"",e),o(e,r)})))},d=(n,r,c)=>{const a=e();return t(s([r,n]),i((([e,t])=>{t.fetch(e).then((e=>{let t;return t="application/json"===e.headers.get("Content-Type")?e.json():e.text(),e.ok?t:Promise.reject(t)})).then((e=>{o(e,a)})).catch((e=>{o(e,c)}))}))),a},p=(e,n,r)=>i=>{t(s([r,n]),c(i,(([t,n])=>{const r=n.querySelector(t);if(r)o(r,i);else{if(!e)throw new Error(`Element with selector=${t} was not found!`);{const r=n.body,s={childList:!0,subtree:!0},c=e.get((e=>{for(const r of e)if("childList"===r.type){const e=n.querySelector(t);if(e){o(e,i),c.disconnect();break}}}));c.observe(r,s)}}})))},h=(n,r,c="")=>{const l=e();return a(l,[n,r,c]),t(s([n,r,c]),i((([e,t,n])=>{o(e.getAttribute(t)||n,l)}))),l},v=(e,n)=>r=>{t(s([e,n]),c(r,(([e,t])=>{const n=e.createElement("style");n.textContent=t,e.head.appendChild(n),o(t,r)})))},f=(e,n)=>{const r=()=>{t(n,(t=>{e.give(t.value)}))};let o=null;return t(n,i((e=>{o&&(e.removeEventListener("keyup",r),e.removeEventListener("change",r)),e.addEventListener("keyup",r),e.addEventListener("change",r),o=e}))),t(s([e,n]),i((([e,t])=>{t.value=String(e)}))),e},g=(e,n,r)=>{const o=s([r,n,e]);return t(o,i((([e,t,n])=>{n.log("LOG:",t,e)}))),r};export{h as attribute,p as element,d as fetched,u as historyNewPate,l as historyPoppedPage,f as input,g as log,v as styleInstalled};
//# sourceMappingURL=silentium-web-api.min.mjs.map
