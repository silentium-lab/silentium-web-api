import{sourceOf as e,value as t,patronOnce as n,destroy as r,give as o,sourceAll as s,patron as c,guestCast as l,subSourceMany as i,source as a,sourceOnce as u,sourceSync as d,sourceDestroyable as f,sourceCombined as h}from"silentium";const v=(s,c)=>{const l=e(),i=e=>{const{state:t}=e;t?.url&&o(String(t.url),l)};return t(s,n((e=>{e.addEventListener("popstate",i)}))),t(c,n((()=>{r([l]),t(s,(e=>{e.removeEventListener("popstate",i)}))}))),l},g=(e,n)=>(t(s([n,e]),c((([e,t])=>{t.pushState({url:e,date:Date.now()},"",e)}))),n),p=(n,r,l)=>{const i=e();return t(s([r,n]),c((([e,t])=>{t.fetch(e.url,{...e,url:void 0}).then((e=>{let t;return t="application/json"===e.headers.get("Content-Type")?e.json():e.text(),e.ok?t:Promise.reject(t)})).then((e=>{o(e,i)})).catch((e=>{o(e,l)}))}))),i},y=(e,n,r)=>c=>{t(s([r,n]),l(c,(([t,n])=>{const r=n.querySelector(t);if(r)o(r,c);else{if(!e)throw new Error(`Element with selector=${t} was not found!`);{const r=n.body,s={childList:!0,subtree:!0},l=e.get((e=>{for(const r of e)if("childList"===r.type){const e=n.querySelector(t);if(e){o(e,c),l.disconnect();break}}}));l.observe(r,s)}}})))},L=(e,n,r)=>c=>{t(s([r,n]),l(c,(([t,n])=>{const r=n.querySelectorAll(t);if(r)o(Array.from(r),c);else{if(!e)throw new Error(`Element with selector=${t} was not found!`);{const r=n.body,s={childList:!0,subtree:!0},l=e.get((e=>{for(const r of e)if("childList"===r.type){const e=n.querySelectorAll(t);if(e){o(Array.from(e),c),l.disconnect();break}}}));l.observe(r,s)}}})))},m=(n,r,l="")=>{const a=e();return i(a,[r,n,l]),t(s([r,n,l]),c((([e,t,n])=>{o(e.getAttribute(t)||n,a)}))),a},E=(e,n)=>r=>{t(s([e,n]),l(r,(([e,t])=>{const n=e.createElement("style");n.textContent=t,e.head.appendChild(n),o(t,r)})))},b=(e,n)=>{const r=()=>{t(n,(t=>{e.give(t.value)}))};let o=null;return t(n,c((e=>{o&&(e.removeEventListener("keyup",r),e.removeEventListener("change",r)),e.addEventListener("keyup",r),e.addEventListener("change",r),o=e}))),t(s([e,n]),c((([e,t])=>{t.value=String(e)}))),e},w=(n,r,o=a("href"))=>{const c=e();return t(s([n,r,o]),(([e,t,n])=>{e.addEventListener("click",(e=>{if(null!==e.target&&"matches"in e.target&&"function"==typeof e.target.matches&&e.target.matches(t)){e.preventDefault();const t=e?.target?.getAttribute(n);t&&c.give(t)}}))})),c},k=(e,n,r="block")=>(t(s([e,n,r]),c((([e,t,n])=>{t.style.display=e?n:"none"}))),e),S=(e,r)=>{const s=u(e),c=d(r);return f((e=>{let r=null;const l=t=>{o(t,e)};return t(s,n((e=>{r=e,e.addEventListener(c.syncValue(),l)}))),()=>{null!==r&&r.removeEventListener(c.syncValue(),l)}}))},A=(e,n)=>(t(s([e,n]),c((([e,t])=>{t.textContent=e}))),e),q=(e,n)=>(t(s([n,e]),c((([e,t])=>{t.innerHTML=e}))),n),x=(e,t)=>h(e,t)(((e,t,n)=>{t.classList.toggle(n),o(n,e)})),C=(e,t)=>h(e,t)(((e,t,n)=>{t.classList.add(n),o(n,e)})),j=(e,t)=>h(e,t)(((e,t,n)=>{t.classList.remove(n),o(n,e)})),D=(e,n,r)=>{const o=s([r,n,e]);return t(o,c((([e,t,n])=>{n.log("LOG:",t,e)}))),r};export{m as attribute,C as classAdded,j as classRemoved,x as classToggled,y as element,L as elements,S as event,p as fetched,g as historyNewPate,v as historyPoppedPage,q as html,b as input,w as link,D as log,E as styleInstalled,A as text,k as visible};
//# sourceMappingURL=silentium-web-api.min.mjs.map
