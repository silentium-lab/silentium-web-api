import{All as e}from"silentium";function t(e,t,r){return n=>{const o=new AbortController;r&&r((e=>{e&&o.abort()})),e((e=>{const{baseUrl:r,url:c,method:i,credentials:s,headers:a,body:l,query:d}=e;let u;try{u=new URL(String(c),r)}catch{return void t?.(new Error("Invalid URL"))}Object.entries(d??{}).forEach((([e,t])=>u.searchParams.append(e,String(t))));const h={method:i,credentials:s,headers:a,body:l,signal:o.signal};fetch(u.toString(),h).then((e=>e.text())).then((e=>n(e))).catch((e=>{t?.(e)}))}))}}function r(e,t){return r=>{e((e=>{try{r({...e,headers:{...e.headers??{},"Content-Type":"application/json"},body:JSON.stringify(e.body)})}catch{t?.(new Error("Failed to parse JSON"))}}))}}function n(e){return t=>{e((e=>{const r=document.querySelectorAll(e);if(r.length)t(Array.from(r));else{const r=document.body,n={childList:!0,subtree:!0},o=new MutationObserver((r=>{for(const n of r)if("childList"===n.type){const r=document.querySelectorAll(e);if(r){t(Array.from(r)),o.disconnect();break}}}));o.observe(r,n)}}))}}function o(t,r){return n=>{e(t,r)((([e,t])=>{console.log("LOG:",t,e),n(e)}))}}function c(e){return t=>{setTimeout((()=>{t(e)}),e)}}export{n as Elements,t as FetchedData,o as Log,r as RequestJson,c as Timer};
//# sourceMappingURL=silentium-web-api.min.mjs.map
