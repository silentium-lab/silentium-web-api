{"version":3,"file":"silentium-web-api.js","sources":["../src/fetch/FetchedData.ts","../src/fetch/RequestJson.ts","../src/dom/Elements.ts","../src/console/Log.ts","../src/timer/Timer.ts"],"sourcesContent":["import { DataType, DataUserType } from \"silentium\";\n\nexport interface FetchRequestType {\n  baseUrl?: string;\n  url: string;\n  method: string;\n  credentials?: RequestCredentials;\n  headers?: Record<string, string>;\n  body?: unknown;\n  query?: Record<string, unknown>;\n}\n\n/**\n * Wrapper around FetchAPI\n * https://kosukhin.github.io/patron-web-api/#/fetch/fetched\n * https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\n */\nexport const fetchedData = (\n  requestSrc: DataType<Partial<FetchRequestType>>,\n  errorOwner?: DataUserType,\n  abortSrc?: DataType,\n): DataType<string> => {\n  return (u) => {\n    const abortController = new AbortController();\n    if (abortSrc) {\n      abortSrc((abort) => {\n        if (abort) {\n          abortController.abort();\n        }\n      });\n    }\n    requestSrc((request) => {\n      const { baseUrl, url, method, credentials, headers, body, query } =\n        request;\n      let urlWithQuery: URL;\n      try {\n        urlWithQuery = new URL(String(url), baseUrl);\n      } catch {\n        errorOwner?.(new Error(\"Invalid URL\"));\n        return;\n      }\n      Object.entries(query ?? {}).forEach(([key, value]) =>\n        urlWithQuery.searchParams.append(key, String(value)),\n      );\n      const options: RequestInit = {\n        method,\n        credentials,\n        headers,\n        body: body as BodyInit,\n        signal: abortController.signal,\n      };\n      fetch(urlWithQuery.toString(), options)\n        .then((response) => response.text())\n        .then((data) => u(data))\n        .catch((error) => {\n          errorOwner?.(error);\n        });\n    });\n  };\n};\n","import { DataType, DataUserType } from \"silentium\";\nimport { FetchRequestType } from \"./FetchedData\";\n\n/**\n * Represents a request for JSON data.\n */\nexport const requestJson = (\n  requestSrc: DataType<Partial<FetchRequestType>>,\n  errorOwner?: DataUserType<unknown>,\n): DataType<Partial<FetchRequestType>> => {\n  return (u) => {\n    requestSrc((r) => {\n      try {\n        u({\n          ...r,\n          headers: {\n            ...(r.headers ?? {}),\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(r.body),\n        });\n      } catch {\n        errorOwner?.(new Error(\"Failed to parse JSON\"));\n      }\n    });\n  };\n};\n","import { DataType } from \"silentium\";\n\n/**\n * Represents a collection of elements that match a given CSS selector.\n */\nexport const elements = (\n  selectorSrc: DataType<string>,\n): DataType<HTMLElement[]> => {\n  return (u) => {\n    selectorSrc((selectorContent) => {\n      const element = document.querySelectorAll(selectorContent);\n      if (element.length) {\n        u(Array.from(element) as HTMLElement[]);\n      } else {\n        const targetNode = document.body;\n        const config = { childList: true, subtree: true };\n\n        const observer = new MutationObserver((mutationsList) => {\n          for (const mutation of mutationsList) {\n            if (mutation.type === \"childList\") {\n              const element = document.querySelectorAll(selectorContent);\n              if (element) {\n                u(Array.from(element) as HTMLElement[]);\n                observer.disconnect();\n                break;\n              }\n            }\n          }\n        });\n\n        observer.observe(targetNode, config);\n      }\n    });\n  };\n};\n","import { all, DataType } from \"silentium\";\n\n/**\n * Helps to print logs to somewhere\n * https://developer.mozilla.org/en-US/docs/Web/API/Console_API\n */\nexport const log = <T>(\n  sourceSrc: DataType<T>,\n  titleSrc: DataType<string>,\n): DataType<T> => {\n  return (u) => {\n    all(\n      sourceSrc,\n      titleSrc,\n    )(([source, title]) => {\n      console.log(\"LOG:\", title, source);\n      u(source);\n    });\n  };\n};\n","import { DataType } from \"silentium\";\n\nexport const timer = (delay: number): DataType<number> => {\n  return (u) => {\n    setTimeout(() => {\n      u(delay);\n    }, delay);\n  };\n};\n"],"names":["element"],"mappings":"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"}